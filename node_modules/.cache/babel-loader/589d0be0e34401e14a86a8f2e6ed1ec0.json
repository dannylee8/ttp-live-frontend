{"ast":null,"code":"var _jsxFileName = \"/Users/dannylee/git/ttp-live/ttp-live-frontend/src/components/LeftCol.js\";\nimport React from 'react';\nimport SingleStock from './SingleStock';\nimport SingleTransaction from './SingleTransaction'; // to easily show comma deliminated numbers ex: 1,000,000\n\nvar commaNumber = require('comma-number'); // in portfolio mode show current stock list, current prices, conditionally rendered colors\n// in transaction mode, show past transactions\n\n\nfunction LeftCol(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.loading ? \"column left fade-out\" : \"column left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), props.modeStatus === 'portfolio' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Portfolio\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Current value: $\", commaNumber(props.portfolioCurrentValue.toFixed(2))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Portfolio Cost: $\", commaNumber(props.portfolioCost)), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"stocks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, props.stocks.map(s => {\n    return /*#__PURE__*/React.createElement(SingleStock, {\n      key: s.id,\n      symbol: s.symbol,\n      shares: s.shares,\n      currentPrice: s.current_price,\n      openPrice: s.openPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }\n    });\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Transactions\"), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"stocks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, props.stocks.map(s => {\n    return /*#__PURE__*/React.createElement(SingleTransaction, {\n      key: s.id,\n      symbol: s.symbol,\n      shares: s.shares,\n      price: s.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }\n    });\n  })))));\n}\n\nexport default LeftCol;","map":{"version":3,"sources":["/Users/dannylee/git/ttp-live/ttp-live-frontend/src/components/LeftCol.js"],"names":["React","SingleStock","SingleTransaction","commaNumber","require","LeftCol","props","loading","modeStatus","portfolioCurrentValue","toFixed","portfolioCost","stocks","map","s","id","symbol","shares","current_price","openPrice","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB,C,CAEA;AACA;;;AACA,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAK,IAAA,SAAS,EAAEA,KAAK,CAACC,OAAN,GAAgB,sBAAhB,GAAyC,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGD,KAAK,CAACE,UAAN,KAAqB,WAArB,gBACD,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBL,WAAW,CAACG,KAAK,CAACG,qBAAN,CAA4BC,OAA5B,CAAoC,CAApC,CAAD,CAAhC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBP,WAAW,CAACG,KAAK,CAACK,aAAP,CAAjC,CAHF,eAIE;AAAO,IAAA,EAAE,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAkBC,CAAD,IAAO;AACvB,wBAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,CAAC,CAACC,EAApB;AAAwB,MAAA,MAAM,EAAED,CAAC,CAACE,MAAlC;AAA0C,MAAA,MAAM,EAAEF,CAAC,CAACG,MAApD;AAA4D,MAAA,YAAY,EAAEH,CAAC,CAACI,aAA5E;AAA2F,MAAA,SAAS,EAAEJ,CAAC,CAACK,SAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF,CAJF,CADC,gBAcD,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,IAAA,EAAE,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAkBC,CAAD,IAAO;AACvB,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEA,CAAC,CAACC,EAA1B;AAA8B,MAAA,MAAM,EAAED,CAAC,CAACE,MAAxC;AAAgD,MAAA,MAAM,EAAEF,CAAC,CAACG,MAA1D;AAAkE,MAAA,KAAK,EAAEH,CAAC,CAACM,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF,CAFF,CAjBF,CADF;AA+BD;;AAED,eAAef,OAAf","sourcesContent":["import React from 'react'\nimport SingleStock from './SingleStock'\nimport SingleTransaction from './SingleTransaction'\n\n// to easily show comma deliminated numbers ex: 1,000,000\nvar commaNumber = require('comma-number')\n\n// in portfolio mode show current stock list, current prices, conditionally rendered colors\n// in transaction mode, show past transactions\nfunction LeftCol (props) {\n  return (\n    <div className={props.loading ? \"column left fade-out\" : \"column left\"}>\n      <br />\n      <br />\n      {props.modeStatus === 'portfolio' ? \n      <>\n        <h2>Portfolio</h2>\n        <h4>Current value: ${commaNumber(props.portfolioCurrentValue.toFixed(2))}</h4>\n        <h4>Portfolio Cost: ${commaNumber(props.portfolioCost)}</h4>\n        <table id='stocks'>\n          <tbody>\n            {props.stocks.map((s) => { \n              return <SingleStock key={s.id} symbol={s.symbol} shares={s.shares} currentPrice={s.current_price} openPrice={s.openPrice}/>\n            })}\n          </tbody>\n        </table>\n      </>\n      : \n      <>\n        <h2>Transactions</h2>\n        <table id='stocks'>\n          <tbody>\n            {props.stocks.map((s) => { \n              return <SingleTransaction key={s.id} symbol={s.symbol} shares={s.shares} price={s.price} />\n            })}\n          </tbody>\n        </table>\n      </>\n      }\n    </div>\n  )\n}\n\nexport default LeftCol\n"]},"metadata":{},"sourceType":"module"}