{"ast":null,"code":"var _jsxFileName = \"/Users/dannylee/git/ttp/ttp-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMode = modeText => {\n      this.setState({\n        mode: modeText\n      });\n    };\n\n    this.loginStatus = () => {\n      axios.get('http://localhost:3001/logged_in', {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response.data);\n        } else {\n          this.handleLogout();\n        }\n      }).catch(error => {\n        console.log('api errors:', error);\n      });\n    };\n\n    this.handleLogin = data => {\n      this.setState((prevState, props) => ({\n        isLoggedIn: true,\n        user: data.user,\n        mode: 'portfolio'\n      }));\n\n      if (data.user) {\n        this.getUserStocks(data.user.id);\n      }\n    };\n\n    this.getUserStocks = id => {\n      fetch(`http://localhost:3001/users/${id}`).then(resp => resp.json()).then(json => {\n        this.setState((prevState, props) => ({\n          stocks: json.stocks,\n          portfolioCost: json.portfolio_cost,\n          portfolioCurrentValue: json.portfolio_current_value\n        }));\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n\n    this.state = {\n      loading: true,\n      isLoggedIn: false,\n      user: {},\n      mode: '',\n      stocks: [],\n      portfolioCost: 0,\n      portfolioCurrentValue: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loginStatus().then(() => this.setState({\n      loading: false\n    }));\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => React.createElement(Signup, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, this.state, {\n        handleLogout: this.handleLogout,\n        userobj: this.state.user,\n        setMode: this.setMode,\n        modeStatus: this.state.mode,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dannylee/git/ttp/ttp-frontend/src/App.js"],"names":["React","Component","axios","BrowserRouter","Switch","Route","Home","Login","Signup","App","constructor","props","setMode","modeText","setState","mode","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","handleLogout","catch","error","console","log","prevState","isLoggedIn","user","getUserStocks","id","fetch","resp","json","stocks","portfolioCost","portfolio_cost","portfolioCurrentValue","portfolio_current_value","state","loading","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Home from './components/Home'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      loading: true,\n      isLoggedIn: false,\n      user: {},\n      mode: '',\n      stocks: [],\n      portfolioCost: 0,\n      portfolioCurrentValue: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loginStatus().then(() => this.setState({ loading: false }));\n  }\n\n  setMode = (modeText) => {\n    this.setState({\n      mode: modeText\n    })\n  }\n\n  loginStatus = () => {\n    axios.get('http://localhost:3001/logged_in', {withCredentials: true})\n    .then(response => {\n      if (response.data.logged_in) {\n        this.handleLogin(response.data)\n      } else {\n        this.handleLogout()\n      }\n    })\n    .catch(error =>{\n      console.log('api errors:', error)\n    })\n  }\n\n  handleLogin = (data) => {\n    this.setState((prevState, props) => ({\n      isLoggedIn: true,\n      user: data.user, \n      mode: 'portfolio'\n    }))\n    if (data.user) {\n      this.getUserStocks(data.user.id)\n    }\n  }\n\n  getUserStocks = (id) => {\n    fetch(`http://localhost:3001/users/${id}`)\n    .then (resp => resp.json())\n    .then (json => {\n      this.setState((prevState, props) => ({\n        stocks: json.stocks,\n        portfolioCost: json.portfolio_cost,\n        portfolioCurrentValue: json.portfolio_current_value\n      }))\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n      isLoggedIn: false,\n      user: {}\n    })\n  }\n\n  render() {\n    const { loading } = this.state;\n    \n    if (loading) { \n      return null; \n    }\n\n    return (\n      <div id='wrapper'>\n        <BrowserRouter>\n          <Switch>\n            <Route \n              exact path='/login' \n              render={props => (\n              <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              path='/' \n              render={props => (\n              <Home {...props} {...this.state} handleLogout={this.handleLogout} userobj={this.state.user} setMode={this.setMode} modeStatus={this.state.mode} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}