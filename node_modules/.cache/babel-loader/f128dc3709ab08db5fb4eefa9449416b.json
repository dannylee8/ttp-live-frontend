{"ast":null,"code":"var _jsxFileName = \"/Users/dannylee/git/ttp/ttp-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMode = modeText => {\n      this.setState({\n        mode: modeText\n      });\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        user: user\n      });\n    };\n\n    this.updateStocks = stock => {\n      this.setState({});\n    };\n\n    this.loginStatus = () => {\n      axios.get('http://localhost:3001/logged_in', {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response.data);\n        } else {\n          this.handleLogout();\n        }\n      }).catch(error => {\n        console.log('api errors:', error);\n      });\n    };\n\n    this.handleLogin = data => {\n      this.setState((prevState, props) => ({\n        isLoggedIn: true,\n        user: data.user,\n        mode: 'portfolio'\n      }));\n\n      if (data.user) {\n        this.getUserStocks(data.user.id);\n      }\n    };\n\n    this.getUserStocks = id => {\n      fetch(`http://localhost:3001/users/${id}`).then(resp => resp.json()).then(json => {\n        this.setState((prevState, props) => ({\n          stocks: json.stocks,\n          portfolioCost: json.portfolio_cost,\n          portfolioCurrentValue: json.portfolio_current_value\n        }));\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n\n    this.state = {\n      loading: true,\n      isLoggedIn: false,\n      user: {},\n      mode: '',\n      stocks: [],\n      portfolioCost: 0,\n      portfolioCurrentValue: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loginStatus();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => React.createElement(Signup, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, this.state, {\n        updateUser: this.updateUser,\n        handleLogout: this.handleLogout,\n        userobj: this.state.user,\n        setMode: this.setMode,\n        modeStatus: this.state.mode,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dannylee/git/ttp/ttp-frontend/src/App.js"],"names":["React","Component","axios","BrowserRouter","Switch","Route","Home","Login","Signup","App","constructor","props","setMode","modeText","setState","mode","updateUser","user","updateStocks","stock","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","handleLogout","catch","error","console","log","prevState","isLoggedIn","getUserStocks","id","fetch","resp","json","stocks","portfolioCost","portfolio_cost","portfolioCurrentValue","portfolio_current_value","state","loading","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Home from './components/Home'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      loading: true, \n      isLoggedIn: false,\n      user: {},\n      mode: '',\n      stocks: [],\n      portfolioCost: 0,\n      portfolioCurrentValue: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loginStatus()\n  }\n\n  setMode = (modeText) => {\n    this.setState({\n      mode: modeText\n    })\n  }\n\n  updateUser = (user) => {\n    this.setState({\n      user: user\n    })\n  }\n\n  updateStocks = (stock) => {\n    this.setState({\n      \n    })\n  }\n  loginStatus = () => {\n    axios.get('http://localhost:3001/logged_in', {withCredentials: true})\n    .then(response => {\n      if (response.data.logged_in) {\n        this.handleLogin(response.data)\n      } else {\n        this.handleLogout()\n      }\n    })\n    .catch(error =>{\n      console.log('api errors:', error)\n    })\n  }\n\n  handleLogin = (data) => {\n    this.setState((prevState, props) => ({\n      isLoggedIn: true,\n      user: data.user, \n      mode: 'portfolio'\n    }))\n    if (data.user) {\n      this.getUserStocks(data.user.id)\n    }\n  }\n\n  getUserStocks = (id) => {\n    fetch(`http://localhost:3001/users/${id}`)\n    .then (resp => resp.json())\n    .then (json => {\n      this.setState((prevState, props) => ({\n        stocks: json.stocks,\n        portfolioCost: json.portfolio_cost,\n        portfolioCurrentValue: json.portfolio_current_value\n      }))\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n      isLoggedIn: false,\n      user: {}\n    })\n  }\n\n  render() {\n    return (\n      <div id='wrapper'>\n        <BrowserRouter>\n          <Switch>\n            <Route \n              exact path='/login' \n              render={props => (\n              <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              path='/' \n              render={props => (\n              <Home {...props} {...this.state} updateUser={this.updateUser} handleLogout={this.handleLogout} userobj={this.state.user} setMode={this.setMode} modeStatus={this.state.mode} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}