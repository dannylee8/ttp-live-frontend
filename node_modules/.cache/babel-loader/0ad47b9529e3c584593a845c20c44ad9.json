{"ast":null,"code":"import React from'react';var commaNumber=require('comma-number');function SingleStock(props){// conditionally render color of the stock Symbol and Price \n// red if current price is less than open price\n// green if reverse, gray if equal\nconsole.log(props);return React.createElement(\"tr\",null,React.createElement(\"td\",{className:props.currentPrice>props.openPrice?'green':props.currentPrice===props.openPrice?'gray':'red'},props.symbol),React.createElement(\"td\",null,props.shares,\" shares\"),React.createElement(\"td\",{className:props.currentPrice>props.openPrice?'green':props.currentPrice===props.openPrice?'gray':'red'},\"$ \",commaNumber((props.shares*props.currentPrice).toFixed(2))));}export default SingleStock;","map":{"version":3,"sources":["/Users/dannylee/git/ttp-live/ttp-live-frontend/src/components/SingleStock.js"],"names":["React","commaNumber","require","SingleStock","props","console","log","currentPrice","openPrice","symbol","shares","toFixed"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAIC,CAAAA,WAAW,CAAGC,OAAO,CAAC,cAAD,CAAzB,CAEA,QAASC,CAAAA,WAAT,CAAsBC,KAAtB,CAA6B,CAC3B;AACA;AACA;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAEA,MACE,+BACE,0BAAI,SAAS,CAAGA,KAAK,CAACG,YAAN,CAAqBH,KAAK,CAACI,SAA5B,CAAyC,OAAzC,CAAoDJ,KAAK,CAACG,YAAN,GAAuBH,KAAK,CAACI,SAA9B,CAA2C,MAA3C,CAAoD,KAAtH,EACGJ,KAAK,CAACK,MADT,CADF,CAIE,8BACGL,KAAK,CAACM,MADT,WAJF,CAOE,0BAAI,SAAS,CAAGN,KAAK,CAACG,YAAN,CAAqBH,KAAK,CAACI,SAA5B,CAAyC,OAAzC,CAAoDJ,KAAK,CAACG,YAAN,GAAuBH,KAAK,CAACI,SAA9B,CAA2C,MAA3C,CAAoD,KAAtH,OACKP,WAAW,CAAC,CAACG,KAAK,CAACM,MAAN,CAAeN,KAAK,CAACG,YAAtB,EAAoCI,OAApC,CAA4C,CAA5C,CAAD,CADhB,CAPF,CADF,CAaD,CAED,cAAeR,CAAAA,WAAf","sourcesContent":["import React from 'react'\nvar commaNumber = require('comma-number')\n\nfunction SingleStock (props) {\n  // conditionally render color of the stock Symbol and Price \n  // red if current price is less than open price\n  // green if reverse, gray if equal\n  console.log(props)\n\n  return (\n    <tr>\n      <td className={(props.currentPrice > props.openPrice) ? 'green' : (props.currentPrice === props.openPrice) ? 'gray' : 'red'}>\n        {props.symbol}\n      </td>\n      <td>\n        {props.shares} shares\n      </td>\n      <td className={(props.currentPrice > props.openPrice) ? 'green' : (props.currentPrice === props.openPrice) ? 'gray' : 'red'}>\n        $ {commaNumber((props.shares * props.currentPrice).toFixed(2))}\n      </td>\n    </tr>\n  )\n}\n\nexport default SingleStock\n"]},"metadata":{},"sourceType":"module"}