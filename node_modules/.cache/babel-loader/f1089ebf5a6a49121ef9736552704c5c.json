{"ast":null,"code":"var _jsxFileName = \"/Users/dannylee/git/ttp-live/ttp-live-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/registrations/Login\";\nimport Signup from \"./components/registrations/Signup\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMode = modeText => {\n      this.setState({\n        mode: modeText\n      });\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        user: user\n      });\n    };\n\n    this.updateStocks = (stock, latestPrice) => {\n      this.setState({\n        stocks: [...this.state.stocks, { ...stock,\n          current_price: latestPrice\n        }]\n      });\n    };\n\n    this.loginStatus = () => {\n      // axios.get('https://ttp-live-backend.herokuapp.com/logged_in', {withCredentials: true})\n      axios.get(\"http://localhost:3000/logged_in\", {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response.data);\n        } else {\n          this.handleLogout();\n        }\n      }).catch(error => {\n        console.log(\"api errors:\", error);\n      });\n    };\n\n    this.handleLogin = data => {\n      this.setState((prevState, props) => ({\n        isLoggedIn: true,\n        user: data.user,\n        mode: \"portfolio\",\n        loading: true\n      }));\n\n      if (data.user) {\n        this.getUserStocks(data.user.id);\n      }\n    };\n\n    this.getUserStocks = id => {\n      fetch(`https://ttp-live-backend.herokuapp.com/users/${id}`).then(resp => resp.json()).then(json => {\n        this.setState((prevState, props) => ({\n          stocks: json.stocks,\n          portfolioCost: json.portfolio_cost,\n          portfolioCurrentValue: json.portfolio_current_value\n        }));\n        let symbolList = json.stocks.map(s => s.symbol).join(\",\"); // check to make sure there are stocks in the portfolio\n\n        if (symbolList) {\n          // axios.get(`https://cloud.iexapis.com/stable/stock/market/batch?symbols=${symbolList}&types=ohlc&token=pk_9b7b0939edbc416e8ecee6a94c193697`)\n          axios.get(`https://sandbox.iexapis.com/stable/stock/market/batch?symbols=${symbolList}&types=ohlc&token=Tpk_f60d00f3b3774527b14ddc2510d54b18`).then(response => {\n            console.log(response.data); // response contains OHLC data for each stock in our users portfolio\n\n            for (var key in response.data) {\n              // response.data[key].ohlc.open.price is the number we're looking for\n              let k = key; // assigning k to key to clear 'no-loop-func' eslint\n\n              let stockInState = this.state.stocks.find(s => s.symbol === k); // stock obj we are iterating on\n\n              let filteredState = this.state.stocks.filter(s => s.symbol !== k); // all others in the stocks array\n\n              let openPrice = response.data[key].ohlc.open.price; // the open price\n              // set the state, using spread operator to add a new value to stock obj\n\n              this.setState({\n                stocks: [...filteredState, { ...stockInState,\n                  openPrice: openPrice\n                }]\n              });\n            }\n          });\n        }\n\n        this.setState((prevState, props) => ({\n          loading: false\n        }));\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n\n    this.state = {\n      loading: true,\n      isLoggedIn: false,\n      user: {},\n      mode: \"\",\n      stocks: [],\n      portfolioCost: 0,\n      portfolioCurrentValue: 0\n    };\n  }\n\n  componentDidMount() {\n    // check if user is already logged in\n    this.loginStatus();\n  } // portfolio or transactions mode?\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, this.state, {\n        getUserStocks: this.getUserStocks,\n        updateUser: this.updateUser,\n        updateStocks: this.updateStocks,\n        handleLogout: this.handleLogout,\n        userobj: this.state.user,\n        setMode: this.setMode,\n        modeStatus: this.state.mode,\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dannylee/git/ttp-live/ttp-live-frontend/src/App.js"],"names":["React","Component","axios","BrowserRouter","Switch","Route","Home","Login","Signup","App","constructor","props","setMode","modeText","setState","mode","updateUser","user","updateStocks","stock","latestPrice","stocks","state","current_price","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","handleLogout","catch","error","console","log","prevState","isLoggedIn","loading","getUserStocks","id","fetch","resp","json","portfolioCost","portfolio_cost","portfolioCurrentValue","portfolio_current_value","symbolList","map","s","symbol","join","key","k","stockInState","find","filteredState","filter","openPrice","ohlc","open","price","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,OAnBmB,GAmBRC,QAAD,IAAc;AACtB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF;AADM,OAAd;AAGD,KAvBkB;;AAAA,SA0BnBG,UA1BmB,GA0BLC,IAAD,IAAU;AACrB,WAAKH,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,KA9BkB;;AAAA,SAiCnBC,YAjCmB,GAiCJ,CAACC,KAAD,EAAQC,WAAR,KAAwB;AACrC,WAAKN,QAAL,CAAc;AACZO,QAAAA,MAAM,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,MAAf,EAAuB,EAAE,GAAGF,KAAL;AAAYI,UAAAA,aAAa,EAAEH;AAA3B,SAAvB;AADI,OAAd;AAGD,KArCkB;;AAAA,SAwCnBI,WAxCmB,GAwCL,MAAM;AAClB;AACAtB,MAAAA,KAAK,CACFuB,GADH,CACO,iCADP,EAC0C;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAD1C,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,SAAlB,EAA6B;AAC3B,eAAKC,WAAL,CAAiBH,QAAQ,CAACC,IAA1B;AACD,SAFD,MAEO;AACL,eAAKG,YAAL;AACD;AACF,OARH,EASGC,KATH,CASUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACD,OAXH;AAYD,KAtDkB;;AAAA,SAyDnBH,WAzDmB,GAyDJF,IAAD,IAAU;AACtB,WAAKf,QAAL,CAAc,CAACuB,SAAD,EAAY1B,KAAZ,MAAuB;AACnC2B,QAAAA,UAAU,EAAE,IADuB;AAEnCrB,QAAAA,IAAI,EAAEY,IAAI,CAACZ,IAFwB;AAGnCF,QAAAA,IAAI,EAAE,WAH6B;AAInCwB,QAAAA,OAAO,EAAE;AAJ0B,OAAvB,CAAd;;AAMA,UAAIV,IAAI,CAACZ,IAAT,EAAe;AACb,aAAKuB,aAAL,CAAmBX,IAAI,CAACZ,IAAL,CAAUwB,EAA7B;AACD;AACF,KAnEkB;;AAAA,SAsEnBD,aAtEmB,GAsEFC,EAAD,IAAQ;AACtBC,MAAAA,KAAK,CAAE,gDAA+CD,EAAG,EAApD,CAAL,CACGd,IADH,CACSgB,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGjB,IAFH,CAESiB,IAAD,IAAU;AACd,aAAK9B,QAAL,CAAc,CAACuB,SAAD,EAAY1B,KAAZ,MAAuB;AACnCU,UAAAA,MAAM,EAAEuB,IAAI,CAACvB,MADsB;AAEnCwB,UAAAA,aAAa,EAAED,IAAI,CAACE,cAFe;AAGnCC,UAAAA,qBAAqB,EAAEH,IAAI,CAACI;AAHO,SAAvB,CAAd;AAKA,YAAIC,UAAU,GAAGL,IAAI,CAACvB,MAAL,CAAY6B,GAAZ,CAAiBC,CAAD,IAAOA,CAAC,CAACC,MAAzB,EAAiCC,IAAjC,CAAsC,GAAtC,CAAjB,CANc,CAOd;;AACA,YAAIJ,UAAJ,EAAgB;AACd;AACA/C,UAAAA,KAAK,CACFuB,GADH,CAEK,iEAAgEwB,UAAW,wDAFhF,EAIGtB,IAJH,CAISC,QAAD,IAAc;AAClBO,YAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACC,IAArB,EADkB,CAElB;;AACA,iBAAK,IAAIyB,GAAT,IAAgB1B,QAAQ,CAACC,IAAzB,EAA+B;AAC7B;AACA,kBAAI0B,CAAC,GAAGD,GAAR,CAF6B,CAEhB;;AACb,kBAAIE,YAAY,GAAG,KAAKlC,KAAL,CAAWD,MAAX,CAAkBoC,IAAlB,CAChBN,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaG,CADH,CAAnB,CAH6B,CAK1B;;AACH,kBAAIG,aAAa,GAAG,KAAKpC,KAAL,CAAWD,MAAX,CAAkBsC,MAAlB,CACjBR,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaG,CADF,CAApB,CAN6B,CAQ1B;;AACH,kBAAIK,SAAS,GAAGhC,QAAQ,CAACC,IAAT,CAAcyB,GAAd,EAAmBO,IAAnB,CAAwBC,IAAxB,CAA6BC,KAA7C,CAT6B,CASuB;AAEpD;;AACA,mBAAKjD,QAAL,CAAc;AACZO,gBAAAA,MAAM,EAAE,CACN,GAAGqC,aADG,EAEN,EAAE,GAAGF,YAAL;AAAmBI,kBAAAA,SAAS,EAAEA;AAA9B,iBAFM;AADI,eAAd;AAMD;AACF,WA1BH;AA2BD;;AACD,aAAK9C,QAAL,CAAc,CAACuB,SAAD,EAAY1B,KAAZ,MAAuB;AACnC4B,UAAAA,OAAO,EAAE;AAD0B,SAAvB,CAAd;AAGD,OA3CH;AA4CD,KAnHkB;;AAAA,SAqHnBP,YArHmB,GAqHJ,MAAM;AACnB,WAAKlB,QAAL,CAAc;AACZwB,QAAAA,UAAU,EAAE,KADA;AAEZrB,QAAAA,IAAI,EAAE;AAFM,OAAd;AAID,KA1HkB;;AAEjB,SAAKK,KAAL,GAAa;AACXiB,MAAAA,OAAO,EAAE,IADE;AAEXD,MAAAA,UAAU,EAAE,KAFD;AAGXrB,MAAAA,IAAI,EAAE,EAHK;AAIXF,MAAAA,IAAI,EAAE,EAJK;AAKXM,MAAAA,MAAM,EAAE,EALG;AAMXwB,MAAAA,aAAa,EAAE,CANJ;AAOXE,MAAAA,qBAAqB,EAAE;AAPZ,KAAb;AASD;;AAEDiB,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKxC,WAAL;AACD,GAjByB,CAmB1B;;;AA0GAyC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,MAAM,EAAGtD,KAAD,iBACN,oBAAC,KAAD,oBACMA,KADN;AAEE,QAAA,WAAW,EAAE,KAAKoB,WAFpB;AAGE,QAAA,cAAc,EAAE,KAAKT,KAAL,CAAWgB,UAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAYE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAG3B,KAAD,iBACN,oBAAC,MAAD,oBACMA,KADN;AAEE,QAAA,WAAW,EAAE,KAAKoB,WAFpB;AAGE,QAAA,cAAc,EAAE,KAAKT,KAAL,CAAWgB,UAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAuBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,MAAM,EAAG3B,KAAD,iBACN,oBAAC,IAAD,oBACMA,KADN,EAEM,KAAKW,KAFX;AAGE,QAAA,aAAa,EAAE,KAAKkB,aAHtB;AAIE,QAAA,UAAU,EAAE,KAAKxB,UAJnB;AAKE,QAAA,YAAY,EAAE,KAAKE,YALrB;AAME,QAAA,YAAY,EAAE,KAAKc,YANrB;AAOE,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWL,IAPtB;AAQE,QAAA,OAAO,EAAE,KAAKL,OARhB;AASE,QAAA,UAAU,EAAE,KAAKU,KAAL,CAAWP,IATzB;AAUE,QAAA,cAAc,EAAE,KAAKO,KAAL,CAAWgB,UAV7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF,CADF,CADF;AA+CD;;AA7KyB;;AAgL5B,eAAe7B,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/registrations/Login\";\nimport Signup from \"./components/registrations/Signup\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isLoggedIn: false,\n      user: {},\n      mode: \"\",\n      stocks: [],\n      portfolioCost: 0,\n      portfolioCurrentValue: 0,\n    };\n  }\n\n  componentDidMount() {\n    // check if user is already logged in\n    this.loginStatus();\n  }\n\n  // portfolio or transactions mode?\n  setMode = (modeText) => {\n    this.setState({\n      mode: modeText,\n    });\n  };\n\n  // update our state:user after order placed in RightCol.js\n  updateUser = (user) => {\n    this.setState({\n      user: user,\n    });\n  };\n\n  // update our state:stocks after order placed in RightCol.js\n  updateStocks = (stock, latestPrice) => {\n    this.setState({\n      stocks: [...this.state.stocks, { ...stock, current_price: latestPrice }],\n    });\n  };\n\n  // check if we're already logged into server\n  loginStatus = () => {\n    // axios.get('https://ttp-live-backend.herokuapp.com/logged_in', {withCredentials: true})\n    axios\n      .get(\"http://localhost:3000/logged_in\", { withCredentials: true })\n      .then((response) => {\n        if (response.data.logged_in) {\n          this.handleLogin(response.data);\n        } else {\n          this.handleLogout();\n        }\n      })\n      .catch((error) => {\n        console.log(\"api errors:\", error);\n      });\n  };\n\n  // set our state with user info and their stocks array\n  handleLogin = (data) => {\n    this.setState((prevState, props) => ({\n      isLoggedIn: true,\n      user: data.user,\n      mode: \"portfolio\",\n      loading: true,\n    }));\n    if (data.user) {\n      this.getUserStocks(data.user.id);\n    }\n  };\n\n  // get current user's stocks array\n  getUserStocks = (id) => {\n    fetch(`https://ttp-live-backend.herokuapp.com/users/${id}`)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState((prevState, props) => ({\n          stocks: json.stocks,\n          portfolioCost: json.portfolio_cost,\n          portfolioCurrentValue: json.portfolio_current_value,\n        }));\n        let symbolList = json.stocks.map((s) => s.symbol).join(\",\");\n        // check to make sure there are stocks in the portfolio\n        if (symbolList) {\n          // axios.get(`https://cloud.iexapis.com/stable/stock/market/batch?symbols=${symbolList}&types=ohlc&token=pk_9b7b0939edbc416e8ecee6a94c193697`)\n          axios\n            .get(\n              `https://sandbox.iexapis.com/stable/stock/market/batch?symbols=${symbolList}&types=ohlc&token=Tpk_f60d00f3b3774527b14ddc2510d54b18`\n            )\n            .then((response) => {\n              console.log(response.data);\n              // response contains OHLC data for each stock in our users portfolio\n              for (var key in response.data) {\n                // response.data[key].ohlc.open.price is the number we're looking for\n                let k = key; // assigning k to key to clear 'no-loop-func' eslint\n                let stockInState = this.state.stocks.find(\n                  (s) => s.symbol === k\n                ); // stock obj we are iterating on\n                let filteredState = this.state.stocks.filter(\n                  (s) => s.symbol !== k\n                ); // all others in the stocks array\n                let openPrice = response.data[key].ohlc.open.price; // the open price\n\n                // set the state, using spread operator to add a new value to stock obj\n                this.setState({\n                  stocks: [\n                    ...filteredState,\n                    { ...stockInState, openPrice: openPrice },\n                  ],\n                });\n              }\n            });\n        }\n        this.setState((prevState, props) => ({\n          loading: false,\n        }));\n      });\n  };\n\n  handleLogout = () => {\n    this.setState({\n      isLoggedIn: false,\n      user: {},\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => (\n                <Login\n                  {...props}\n                  handleLogin={this.handleLogin}\n                  loggedInStatus={this.state.isLoggedIn}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={(props) => (\n                <Signup\n                  {...props}\n                  handleLogin={this.handleLogin}\n                  loggedInStatus={this.state.isLoggedIn}\n                />\n              )}\n            />\n            <Route\n              path=\"/\"\n              render={(props) => (\n                <Home\n                  {...props}\n                  {...this.state}\n                  getUserStocks={this.getUserStocks}\n                  updateUser={this.updateUser}\n                  updateStocks={this.updateStocks}\n                  handleLogout={this.handleLogout}\n                  userobj={this.state.user}\n                  setMode={this.setMode}\n                  modeStatus={this.state.mode}\n                  loggedInStatus={this.state.isLoggedIn}\n                />\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}