{"ast":null,"code":"var _jsxFileName = \"/Users/dannylee/git/ttp/ttp-frontend/src/components/RightCol.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar commaNumber = require('comma-number');\n\nconst HEADERS = {\n  \"content-type\": \"application/json\",\n  \"accept\": \"application/json\"\n};\n\nclass RightCol extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        ticker,\n        quantity\n      } = this.state; // check for completed form inputs\n\n      if (!ticker) {\n        alert(\"Please enter a valid stock ticker symbol.\");\n        return;\n      } // positive, integers only\n\n\n      if (!quantity || !Number.isInteger(Number(quantity)) || quantity < 0) {\n        alert(\"Please enter quantity of shares\");\n        return;\n      }\n\n      axios.get(`https://sandbox.iexapis.com/stable/stock/${ticker}/quote?token=Tpk_f60d00f3b3774527b14ddc2510d54b18`).then(response => {\n        if (response.data.symbol) {\n          let orderCost = (response.data.latestPrice * quantity).toFixed(2);\n          let newBalance = this.props.user.cash - orderCost;\n\n          if (newBalance > 0) {\n            this.placeOrder(newBalance, ticker, quantity, response.data.latestPrice);\n          } else {\n            alert(\"Insufficient funds\");\n            return;\n          }\n        } else {\n          this.setState({\n            errors: 'no such ticker',\n            ticker: '',\n            quantity: ''\n          });\n        }\n      }).catch(error => {\n        console.log('api errors:', error);\n        alert('Please enter a valid stock ticker symbol');\n      });\n    };\n\n    this.state = {\n      ticker: '',\n      quantity: ''\n    };\n  }\n\n  placeOrder(newBalance, ticker, quantity, latestPrice) {\n    fetch(\"http://localhost:3001/users/${id}\", {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify({\n        cash: newBalance\n      })\n    }).then(resp => resp.json()).then(json => callout(json));\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      ticker,\n      quantity\n    } = this.state;\n    return (// Portfolio mode, show right column bg color and dividing line\n      React.createElement(\"div\", {\n        className: `column ${this.props.modeStatus === 'portfolio' ? 'right' : ''}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.modeStatus === 'portfolio' ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"cash-balance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Cash Balance: $ \", this.props.userobj ? `${commaNumber(parseFloat(this.props.userobj.cash).toFixed(2))}` : null), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"w3-container stock-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Ticker symbol\",\n        className: \"w3-input w3-border w3-light-grey\",\n        type: \"text\",\n        name: \"ticker\",\n        value: ticker,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Quantity\",\n        className: \"w3-input w3-border w3-light-grey\",\n        type: \"text\",\n        name: \"quantity\",\n        value: quantity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"w3-btn w3-round-large w3-blue-grey\",\n        placeholder: \"submit\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Buy\")))) : null)\n    );\n  }\n\n}\n\nexport default RightCol;","map":{"version":3,"sources":["/Users/dannylee/git/ttp/ttp-frontend/src/components/RightCol.js"],"names":["React","Component","axios","commaNumber","require","HEADERS","RightCol","constructor","props","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","ticker","quantity","state","alert","Number","isInteger","get","then","response","data","symbol","orderCost","latestPrice","toFixed","newBalance","user","cash","placeOrder","errors","catch","error","console","log","fetch","method","headers","body","JSON","stringify","resp","json","callout","render","modeStatus","userobj","parseFloat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nvar commaNumber = require('comma-number')\n\nconst HEADERS = {\n  \"content-type\": \"application/json\",\n  \"accept\"      : \"application/json\"\n}\n\nclass RightCol extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = { \n      ticker: '',\n      quantity: ''\n    };\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  placeOrder(newBalance, ticker, quantity, latestPrice) {\n\n    fetch(\"http://localhost:3001/users/${id}\", {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify({\n        cash: newBalance\n      })\n    })\n    .then(resp => resp.json())\n    .then(json => callout(json))\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const {ticker, quantity} = this.state\n\n    // check for completed form inputs\n    if (!ticker) {\n      alert(\"Please enter a valid stock ticker symbol.\")\n      return\n    }\n    // positive, integers only\n    if (!quantity || !Number.isInteger(Number(quantity)) || quantity < 0) {\n      alert(\"Please enter quantity of shares\")\n      return\n    }\n\n    axios.get(`https://sandbox.iexapis.com/stable/stock/${ticker}/quote?token=Tpk_f60d00f3b3774527b14ddc2510d54b18`)\n    .then(response => {\n      if (response.data.symbol) {\n        let orderCost = (response.data.latestPrice * quantity).toFixed(2)\n        let newBalance = this.props.user.cash - orderCost\n        if (newBalance > 0 ) {\n          this.placeOrder(newBalance, ticker, quantity, response.data.latestPrice)\n        } else {\n          alert(\"Insufficient funds\")\n          return\n        }\n      } else {\n        this.setState({\n          errors: 'no such ticker',\n          ticker: '',\n          quantity: ''\n        })\n      }\n    })\n    .catch(error => {\n      console.log('api errors:', error)\n      alert('Please enter a valid stock ticker symbol')\n    })\n  };\n\n  render() {\n    console.log(this.props)\n    const {ticker, quantity} = this.state\n    return (\n      // Portfolio mode, show right column bg color and dividing line\n      <div className={`column ${(this.props.modeStatus === 'portfolio') ? 'right' : ''}`}>\n        {this.props.modeStatus === 'portfolio' ? \n        <>\n          <div className=\"cash-balance\">\n            Cash Balance: $ {this.props.userobj ? `${commaNumber(parseFloat(this.props.userobj.cash).toFixed(2))}` : null}\n          </div>\n          <br />\n          <div>\n            <form className=\"w3-container stock-form\" onSubmit={this.handleSubmit}>\n              <input\n                placeholder=\"Ticker symbol\"\n                className=\"w3-input w3-border w3-light-grey\"\n                type=\"text\"\n                name=\"ticker\"\n                value={ticker}\n                onChange={this.handleChange}\n              />\n              <br />\n              <input\n                  placeholder=\"Quantity\"\n                  className=\"w3-input w3-border w3-light-grey\"\n                  type=\"text\"\n                  name=\"quantity\"\n                  value={quantity}\n                  onChange={this.handleChange}\n              />\n              <br />\n              <button className=\"w3-btn w3-round-large w3-blue-grey\" placeholder=\"submit\" type=\"submit\">\n                Buy\n              </button>\n            </form>\n          </div>\n        </>\n        : null}\n      </div>\n    )\n  }\n}\n\nexport default RightCol;\n"]},"metadata":{},"sourceType":"module"}