{"ast":null,"code":"var _jsxFileName = \"/Users/dannylee/git/ttp-live/ttp-live-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Signup from './components/registrations/Signup';\nimport Login from './components/registrations/Login';\nimport Home from './components/Home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMode = modeText => {\n      this.setState({\n        mode: modeText\n      });\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        user: user\n      });\n    };\n\n    this.updateStocks = (stock, latestPrice) => {\n      this.setState({\n        stocks: [...this.state.stocks, { ...stock,\n          current_price: latestPrice\n        }]\n      });\n    };\n\n    this.loginStatus = () => {\n      axios.get('https://ttp-live-backend.herokuapp.com/logged_in', {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response.data);\n        } else {\n          this.handleLogout();\n        }\n      }).catch(error => {\n        console.log('api errors:', error);\n      });\n    };\n\n    this.handleLogin = data => {\n      this.setState((prevState, props) => ({\n        isLoggedIn: true,\n        user: data.user,\n        mode: 'portfolio'\n      }));\n\n      if (data.user) {\n        this.getUserStocks(data.user.id);\n      }\n    };\n\n    this.getUserStocks = id => {\n      fetch(`https://ttp-live-backend.herokuapp.com/users/${id}`).then(resp => resp.json()).then(json => {\n        this.setState((prevState, props) => ({\n          stocks: json.stocks,\n          portfolioCost: json.portfolio_cost,\n          portfolioCurrentValue: json.portfolio_current_value\n        }));\n        let symbolList = json.stocks.map(s => s.symbol).join(','); // call IEX API to get open/high/low/close data to use to conditionally render portfolio list's colors\n\n        axios.get(`https://sandbox.iexapis.com/stable/stock/market/batch?symbols=${symbolList}&types=ohlc&token=Tpk_f60d00f3b3774527b14ddc2510d54b18`).then(response => {\n          // response contains OHLC data for each stock in our users portfolio\n          for (var key in response.data) {\n            // response.data[key].ohlc.open.price is the number we're looking for\n            let k = key; // assigning k to key to clear 'no-loop-func' eslint \n\n            let stockInState = this.state.stocks.find(s => s.symbol === k); // stock obj we are iterating on\n\n            let filteredState = this.state.stocks.filter(s => s.symbol !== k); // all others in the stocks array\n\n            let openPrice = response.data[key].ohlc.open.price; // the open price\n            // set the state, using spread oeprator to add a new value to stock obj\n\n            this.setState({\n              stocks: [...filteredState, { ...stockInState,\n                openPrice: openPrice\n              }]\n            });\n          }\n        });\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      loading: true,\n      mode: '',\n      portfolioCost: 0,\n      portfolioCurrentValue: 0,\n      stocks: [],\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    // check if user is already logged in\n    this.loginStatus();\n  } // portfolio or transactions mode?\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => React.createElement(Signup, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, this.state, {\n        updateUser: this.updateUser,\n        updateStocks: this.updateStocks,\n        handleLogout: this.handleLogout,\n        userobj: this.state.user,\n        setMode: this.setMode,\n        modeStatus: this.state.mode,\n        loggedInStatus: this.state.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dannylee/git/ttp-live/ttp-live-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","axios","Signup","Login","Home","App","constructor","props","setMode","modeText","setState","mode","updateUser","user","updateStocks","stock","latestPrice","stocks","state","current_price","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","handleLogout","catch","error","console","log","prevState","isLoggedIn","getUserStocks","id","fetch","resp","json","portfolioCost","portfolio_cost","portfolioCurrentValue","portfolio_current_value","symbolList","map","s","symbol","join","key","k","stockInState","find","filteredState","filter","openPrice","ohlc","open","price","loading","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport axios from 'axios'\nimport Signup from './components/registrations/Signup'\nimport Login from './components/registrations/Login'\nimport Home from './components/Home'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      isLoggedIn: false,\n      loading: true, \n      mode: '',\n      portfolioCost: 0,\n      portfolioCurrentValue: 0,\n      stocks: [],\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    // check if user is already logged in\n    this.loginStatus()\n  }\n\n  // portfolio or transactions mode?\n  setMode = (modeText) => {\n    this.setState({\n      mode: modeText\n    })\n  }\n\n  // update our state:user after order placed in RightCol.js\n  updateUser = (user) => {\n    this.setState({\n      user: user\n    })\n  }\n\n  // update our state:stocks after order placed in RightCol.js\n  updateStocks = (stock, latestPrice) => {\n    this.setState({\n      stocks: [...this.state.stocks, { ...stock, current_price: latestPrice } ]\n    })\n  }\n\n  // check if we're already logged into server\n  loginStatus = () => {\n    axios.get('https://ttp-live-backend.herokuapp.com/logged_in', {withCredentials: true})\n    .then(response => {\n      if (response.data.logged_in) {\n        this.handleLogin(response.data)\n      } else {\n        this.handleLogout()\n      }\n    })\n    .catch(error =>{\n      console.log('api errors:', error)\n    })\n  }\n\n  // set our state with user info and their stocks array\n  handleLogin = (data) => {\n    this.setState((prevState, props) => ({\n      isLoggedIn: true,\n      user: data.user, \n      mode: 'portfolio'\n    }))\n    if (data.user) {\n      this.getUserStocks(data.user.id)\n    }\n  }\n\n  // get current user's stocks array\n  getUserStocks = (id) => {\n    fetch(`https://ttp-live-backend.herokuapp.com/users/${id}`)\n    .then (resp => resp.json())\n    .then (json => {\n      this.setState((prevState, props) => ({\n        stocks: json.stocks,\n        portfolioCost: json.portfolio_cost,\n        portfolioCurrentValue: json.portfolio_current_value\n      }))\n      \n      let symbolList = json.stocks.map(s => s.symbol).join(',')\n\n      // call IEX API to get open/high/low/close data to use to conditionally render portfolio list's colors\n      axios.get(`https://sandbox.iexapis.com/stable/stock/market/batch?symbols=${symbolList}&types=ohlc&token=Tpk_f60d00f3b3774527b14ddc2510d54b18`)\n      .then(response => {\n        // response contains OHLC data for each stock in our users portfolio\n\n        for (var key in response.data) {\n          // response.data[key].ohlc.open.price is the number we're looking for\n          let k = key   // assigning k to key to clear 'no-loop-func' eslint \n          let stockInState = this.state.stocks.find(s => s.symbol === k) // stock obj we are iterating on\n          let filteredState = this.state.stocks.filter(s => s.symbol !== k) // all others in the stocks array\n          let openPrice = response.data[key].ohlc.open.price // the open price\n\n          // set the state, using spread oeprator to add a new value to stock obj\n          this.setState({\n            stocks: [...filteredState, { ...stockInState, openPrice: openPrice  } ]\n          })\n        }\n      })\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n      isLoggedIn: false,\n      user: {}\n    })\n  }\n\n  render() {\n    return (\n      <div id='wrapper'>\n        <BrowserRouter>\n          <Switch>\n            <Route \n              exact path='/login' \n              render={props => (\n              <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              path='/' \n              render={props => (\n              <Home {...props} {...this.state} updateUser={this.updateUser} updateStocks={this.updateStocks} handleLogout={this.handleLogout} userobj={this.state.user} setMode={this.setMode} modeStatus={this.state.mode} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}