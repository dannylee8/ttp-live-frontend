{"version":3,"sources":["components/registrations/Signup.js","components/registrations/Login.js","components/TopMenu.js","components/SingleStock.js","components/SingleTransaction.js","components/LeftCol.js","components/RightCol.js","components/Home.js","App.js","index.js"],"names":["Signup","props","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","state","user","username","email","password","password_confirmation","cash","axios","post","withCredentials","then","response","data","status","handleLogin","redirect","errors","catch","error","console","log","history","push","handleErrors","className","map","key","this","loggedInStatus","id","onSubmit","placeholder","type","onChange","to","Component","Login","logged_in","TopMenu","setModeClick","setMode","innerHTML","toLowerCase","onClick","delete","handleLogout","commaNumber","require","SingleStock","currentPrice","openPrice","symbol","shares","toFixed","SingleTransaction","parseFloat","price","LeftCol","modeStatus","portfolioCurrentValue","portfolioCost","stocks","s","current_price","HEADERS","RightCol","ticker","quantity","Number","isInteger","alert","get","orderCost","latestPrice","newBalance","placeOrder","userID","fetch","method","headers","body","JSON","stringify","resp","json","updateUser","toUpperCase","user_id","updateStocks","stock","userobj","Home","App","modeText","mode","loginStatus","prevState","isLoggedIn","getUserStocks","portfolio_cost","portfolio_current_value","symbolList","join","k","stockInState","find","filteredState","filter","ohlc","open","loading","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6cbf009e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      errors: ''\n    };\n  }\n\n  componentDidUpdate() {\n    // if we're already logged in, let's go home...\n    return this.props.loggedInStatus ? this.redirect() : null\n  }\n  \n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    // deconstruct state into variables for clarity/simplification\n    const {username, email, password, password_confirmation} = this.state\n    let user = {\n      username: username,\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n      cash: 5000.00\n    }\n    // create our new user in the backend\n    axios.post('https://ttp-live-backend.herokuapp.com/users', {user}, {withCredentials: true})\n    .then(response => {\n      // if all is well, send our user home\n      // otherwise, show errors and clear form\n      if (response.data.status === 'created') {\n        this.props.handleLogin(response.data)\n        this.redirect()\n      } else {\n        this.setState({\n          errors: response.data.errors,\n          username: '',\n          email: '',\n          password: '',\n          password_confirmation: ''\n        })\n      }\n    })\n    .catch(error => console.log('api errors:', error))\n  };\n\n  redirect = () => {\n    this.props.history.push('/')\n  }\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul className='error-message'>{this.state.errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}</ul> \n      </div>\n    )\n  }\n\n  render() {\n    const {username, email, password, password_confirmation} = this.state\n    return (\n      <>\n        <div className='top-menu'>\n            <span className='logo'>TTP Stock Trade</span>\n        </div>\n        <div className='center'>\n          <div id=\"login_div\">\n            <h4>Register</h4>\n            <form className=\"w3-container\" onSubmit={this.handleSubmit}>\n              <input\n                placeholder=\"username\"\n                className=\"w3-input w3-border w3-light-grey\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={this.handleChange}\n              />\n              <input\n                placeholder=\"email\"\n                className=\"w3-input w3-border w3-light-grey\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n              />\n              <input \n                placeholder=\"password\"\n                className=\"w3-input w3-border w3-light-grey\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n              />\n              <input\n                placeholder=\"password confirmation\"\n                className=\"w3-input w3-border w3-light-grey\"\n                type=\"password\"\n                name=\"password_confirmation\"\n                value={password_confirmation}\n                onChange={this.handleChange}\n              />\n            \n              <button className=\"w3-btn w3-round-large w3-blue-grey\" placeholder=\"submit\" type=\"submit\">\n                Sign Up\n              </button>\n              <div>\n                or <Link to='/login'>login</Link>\n              </div>\n            </form>\n            <br />\n          </div>\n          <div className='error-box'>\n            {\n              this.state.errors ? this.handleErrors() : null\n            }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nclass Login extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { \n      email: '',\n      password: '',\n      errors: ''\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.loggedInStatus)\n    return this.props.loggedInStatus ? this.redirect() : null\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const {email, password} = this.state\n    let user = {\n      email: email,\n      password: password\n    }\n    axios.post('https://ttp-live-backend.herokuapp.com/login', {user}, {withCredentials: true})\n    .then(response => {\n      if (response.data.logged_in) {\n        this.props.handleLogin(response.data)\n        this.redirect()\n      } else {\n        this.setState({\n          errors: response.data.errors,\n          email: '',\n          password: ''\n        })\n      }\n    })\n    .catch(error => console.log('api errors:', error))\n  };\n\n  redirect = () => {\n    this.props.history.push('/')\n  }\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul className='error-message'>\n        {this.state.errors.map(error => {\n        return <li key={error}>{error}</li>\n          })\n        }\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    const {email, password} = this.state\n    return (\n      <>\n        <div className='top-menu'>\n          <span className='logo'>TTP Stock Trade</span>\n        </div>\n        <div className='center' >\n          <div id=\"login_div\">\n            <h4>Sign In</h4>\n            <form className=\"w3-container\" onSubmit={this.handleSubmit}>\n              <input\n                placeholder=\"email\"\n                className=\"w3-input w3-border w3-light-grey\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n              />\n              <br></br>\n                <input\n                  placeholder=\"password\"\n                  className=\"w3-input w3-border w3-light-grey\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={this.handleChange}\n                />\n                <button className=\"w3-btn w3-round-large w3-blue-grey\" placeholder=\"submit\" type=\"submit\">\n                  Log In\n                </button>\n              <div>\n                or <Link to='/signup'>register</Link>\n              </div>\n              </form>\n            </div>\n            <div className='error-box'>\n            {\n              this.state.errors ? this.handleErrors() : null\n            }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Login;","import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nfunction TopMenu (props) {\n  // our logout button handler\n  const handleClick = () => {\n    axios.delete('https://ttp-live-backend.herokuapp.com/logout', { withCredentials: true })\n      .then(response => {\n        props.handleLogout()\n        props.history.push('/login')\n      })\n      .catch(error => console.log(error))\n  }\n\n  // handle setting of our page's current mode (portfolio or transactions)\n  const setModeClick = (event) => {\n    props.setMode(event.target.innerHTML.toLowerCase())\n  }\n\n  return (\n    <div className='w3-bar top-menu'>\n      {/* {console.log(\"TopMenu: \", props)} */}\n      <span className='logo'>TTP Stock Trade</span>\n      {props.loggedInStatus\n        ?    \n        <>       \n          <Link to='/logout' onClick={handleClick}>\n            <button className=\"w3-bar-item w3-button w3-pale-blue w3-right w3-hover-pale-red\"><span className='glyphicon glyphicon-log-out' /> Log Out</button>\n          </Link>\n          <button onClick={setModeClick} className=\"w3-bar-item w3-button w3-light-grey w3-right w3-hover-pale-red\">Portfolio</button>\n          <button onClick={setModeClick} className=\"w3-bar-item w3-button w3-sand w3-right w3-hover-pale-red\">Transactions</button>\n        </>\n        : null}\n    </div>\n  )\n}\n\nexport default TopMenu\n","import React from 'react'\nvar commaNumber = require('comma-number')\n\nfunction SingleStock (props) {\n  // conditionally render color of the stock Symbol and Price \n  // red if current price is less than open price\n  // green if reverse, gray if equal\n  console.log(props)\n\n  return (\n    <tr>\n      <td className={(props.currentPrice > props.openPrice) ? 'green' : (props.currentPrice === props.openPrice) ? 'gray' : 'red'}>\n        {props.symbol}\n      </td>\n      <td>\n        {props.shares} shares\n      </td>\n      <td className={(props.currentPrice > props.openPrice) ? 'green' : (props.currentPrice === props.openPrice) ? 'gray' : 'red'}>\n        $ {commaNumber((props.shares * props.currentPrice).toFixed(2))}\n      </td>\n    </tr>\n  )\n}\n\nexport default SingleStock\n","import React from 'react'\n\nfunction SingleTransaction (props) {\n  return (\n    <tr>\n      <td>\n        BUY ({props.symbol})\n      </td>\n      <td>\n        {props.shares} shares @ ${parseFloat(props.price).toFixed(2)}\n      </td>\n    </tr>\n  )\n}\n\nexport default SingleTransaction\n","import React from 'react'\nimport SingleStock from './SingleStock'\nimport SingleTransaction from './SingleTransaction'\n\n// to easily show comma deliminated numbers ex: 1,000,000\nvar commaNumber = require('comma-number')\n\n// in portfolio mode show current stock list, current prices, conditionally rendered colors\n// in transaction mode, show past transactions\nfunction LeftCol (props) {\n  return (\n    <div className='column left'>\n      <br />\n      <br />\n      {props.modeStatus === 'portfolio'\n        ?\n          <>\n            <h2>Portfolio</h2>\n            <h4>Current value: ${commaNumber(props.portfolioCurrentValue.toFixed(2))}</h4>\n            <h4>Portfolio Cost: ${commaNumber(props.portfolioCost)}</h4>\n            <table id='stocks'>\n              <tbody>\n                {props.stocks.map((s) => {\n                  return <SingleStock key={s.id} symbol={s.symbol} shares={s.shares} currentPrice={s.current_price} openPrice={s.openPrice}/>\n                })}\n              </tbody>\n            </table>\n          </> : <>\n            <h2>Transactions</h2>\n            <table id='stocks'>\n              <tbody>\n                {props.stocks.map((s) => {\n                  return <SingleTransaction key={s.id} symbol={s.symbol} shares={s.shares} price={s.price} />\n                })}\n              </tbody>\n            </table>\n          </>}\n    </div>\n  )\n}\n\nexport default LeftCol\n","import React, { Component } from 'react';\nimport axios from 'axios'\n\n// facilitate comma-separated numbers, eg: 8,888\nvar commaNumber = require('comma-number')\n\nconst HEADERS = {\n  \"content-type\": \"application/json\",\n  \"accept\"      : \"application/json\"\n}\n\nclass RightCol extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { \n      ticker: '',\n      quantity: ''\n    };\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  placeOrder(userID, newBalance, ticker, quantity, latestPrice) {\n    // update our current user's cash balance\n    fetch(`https://ttp-live-backend.herokuapp.com/users/${userID}`, {\n      method: \"PATCH\",\n      headers: HEADERS,\n      body: JSON.stringify({\n        cash: newBalance\n      })\n    })\n    .then(resp => resp.json())\n    .then(json => {\n      this.props.updateUser(json.user)\n    })\n    // create our new stock instance and assign it current user\n    fetch(`https://ttp-live-backend.herokuapp.com/stocks`, {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify({\n        symbol: ticker.toUpperCase(),\n        shares: quantity,\n        price: latestPrice,\n        user_id: userID\n      })\n    })\n    .then(resp => resp.json())\n    .then(json => {\n      // update our stocks array in App.js state\n      this.props.updateStocks(json.stock, latestPrice)\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const {ticker, quantity} = this.state\n\n    // check for completed form inputs\n    if (!ticker) {\n      alert(\"Please enter a valid stock ticker symbol.\")\n      return\n    }\n    // positive, integers only\n    if (!quantity || !Number.isInteger(Number(quantity)) || quantity < 0) {\n      alert(\"Please enter quantity of shares\")\n      return\n    }\n\n    axios.get(`https://sandbox.iexapis.com/stable/stock/${ticker}/quote?token=Tpk_f60d00f3b3774527b14ddc2510d54b18`)\n    .then(response => {\n      if (response.data.symbol) {\n        let orderCost = (response.data.latestPrice * quantity).toFixed(2)\n        let newBalance = this.props.user.cash - orderCost\n\n        // make sure User has enough cash to cover purchase\n        if (newBalance > 0 ) {\n          this.setState({\n            ticker: '',\n            quantity: ''\n          })\n          this.placeOrder(this.props.user.id, newBalance, ticker, quantity, response.data.latestPrice)\n        } else {\n          alert(\"Insufficient funds\")\n          return\n        }\n      } else {\n        this.setState({\n          errors: 'no such ticker',\n          ticker: '',\n          quantity: ''\n        })\n      }\n    })\n    .catch(error => {\n      console.log('api errors:', error)\n      alert('Please enter a valid stock ticker symbol')\n    })\n  };\n\n  render() {\n    // console.log(this.props)\n    const {ticker, quantity} = this.state\n    return (\n      // Portfolio mode, show right column bg color and dividing line\n      <div className={`column ${(this.props.modeStatus === 'portfolio') ? 'right' : ''}`}>\n        {this.props.modeStatus === 'portfolio' ? \n        <>\n          <div className=\"cash-balance\">\n            Cash Balance: $ {this.props.userobj ? `${commaNumber(parseFloat(this.props.userobj.cash).toFixed(2))}` : null}\n          </div>\n          <br />\n          <div>\n            <form className=\"w3-container stock-form\" onSubmit={this.handleSubmit}>\n              <input\n                placeholder=\"Ticker symbol\"\n                className=\"w3-input w3-border w3-light-grey\"\n                type=\"text\"\n                name=\"ticker\"\n                value={ticker}\n                onChange={this.handleChange}\n              />\n              <br />\n              <input\n                  placeholder=\"Quantity\"\n                  className=\"w3-input w3-border w3-light-grey\"\n                  type=\"text\"\n                  name=\"quantity\"\n                  value={quantity}\n                  onChange={this.handleChange}\n              />\n              <br />\n              <button className=\"w3-btn w3-round-large w3-blue-grey\" placeholder=\"submit\" type=\"submit\">\n                Buy\n              </button>\n            </form>\n          </div>\n        </>\n        : null}\n      </div>\n    )\n  }\n}\n\nexport default RightCol;\n","import React, { Component } from 'react';\nimport TopMenu from './TopMenu'\nimport LeftCol from './LeftCol'\nimport RightCol from './RightCol'\n\nclass Home extends Component {\n\n  // if we're not logged in, back to login for this visitor!\n  componentDidUpdate() {\n    return this.props.loggedInStatus ? null : this.redirect()\n  }\n\n  redirect = () => {\n    this.props.history.push('/login')\n  }\n\n  render() {\n    return (\n      <div>\n        <TopMenu {...this.props} setMode={this.props.setMode} loggedInStatus={this.props.loggedInStatus} />\n        {this.props.loggedInStatus ? \n          <div className='row'>\n            <LeftCol {...this.props} userobj={this.props.userobj} modeStatus={this.props.modeStatus} />\n            <RightCol {...this.props} updateUser={this.props.updateUser} userobj={this.props.userobj} modeStatus={this.props.modeStatus} />\n          </div>\n          : null}\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport axios from 'axios'\nimport Signup from './components/registrations/Signup'\nimport Login from './components/registrations/Login'\nimport Home from './components/Home'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      isLoggedIn: false,\n      loading: true, \n      mode: '',\n      portfolioCost: 0,\n      portfolioCurrentValue: 0,\n      stocks: [],\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    // check if user is already logged in\n    this.loginStatus()\n  }\n\n  // portfolio or transactions mode?\n  setMode = (modeText) => {\n    this.setState({\n      mode: modeText\n    })\n  }\n\n  // update our state:user after order placed in RightCol.js\n  updateUser = (user) => {\n    this.setState({\n      user: user\n    })\n  }\n\n  // update our state:stocks after order placed in RightCol.js\n  updateStocks = (stock, latestPrice) => {\n    this.setState({\n      stocks: [...this.state.stocks, { ...stock, current_price: latestPrice } ]\n    })\n  }\n\n  // check if we're already logged into server\n  loginStatus = () => {\n    axios.get('https://ttp-live-backend.herokuapp.com/logged_in', {withCredentials: true})\n    .then(response => {\n      if (response.data.logged_in) {\n        this.handleLogin(response.data)\n      } else {\n        this.handleLogout()\n      }\n    })\n    .catch(error =>{\n      console.log('api errors:', error)\n    })\n  }\n\n  // set our state with user info and their stocks array\n  handleLogin = (data) => {\n    this.setState((prevState, props) => ({\n      isLoggedIn: true,\n      user: data.user, \n      mode: 'portfolio'\n    }))\n    if (data.user) {\n      this.getUserStocks(data.user.id)\n    }\n  }\n\n  // get current user's stocks array\n  getUserStocks = (id) => {\n    fetch(`https://ttp-live-backend.herokuapp.com/users/${id}`)\n    .then (resp => resp.json())\n    .then (json => {\n      this.setState((prevState, props) => ({\n        stocks: json.stocks,\n        portfolioCost: json.portfolio_cost,\n        portfolioCurrentValue: json.portfolio_current_value\n      }))\n      \n      let symbolList = json.stocks.map(s => s.symbol).join(',')\n\n      // call IEX API to get open/high/low/close data to use to conditionally render portfolio list's colors\n      axios.get(`https://sandbox.iexapis.com/stable/stock/market/batch?symbols=${symbolList}&types=ohlc&token=Tpk_f60d00f3b3774527b14ddc2510d54b18`)\n      .then(response => {\n        // response contains OHLC data for each stock in our users portfolio\n\n        for (var key in response.data) {\n          // response.data[key].ohlc.open.price is the number we're looking for\n          let k = key   // assigning k to key to clear 'no-loop-func' eslint \n          let stockInState = this.state.stocks.find(s => s.symbol === k) // stock obj we are iterating on\n          let filteredState = this.state.stocks.filter(s => s.symbol !== k) // all others in the stocks array\n          let openPrice = response.data[key].ohlc.open.price // the open price\n\n          // set the state, using spread oeprator to add a new value to stock obj\n          this.setState({\n            stocks: [...filteredState, { ...stockInState, openPrice: openPrice  } ]\n          })\n        }\n      })\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n      isLoggedIn: false,\n      user: {}\n    })\n  }\n\n  render() {\n    return (\n      <div id='wrapper'>\n        <BrowserRouter>\n          <Switch>\n            <Route \n              exact path='/login' \n              render={props => (\n              <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              path='/' \n              render={props => (\n              <Home {...props} {...this.state} updateUser={this.updateUser} updateStocks={this.updateStocks} handleLogout={this.handleLogout} userobj={this.state.user} setMode={this.setMode} modeStatus={this.state.mode} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}